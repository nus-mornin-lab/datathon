# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Deployment configuration to create Google Cloud Projects for structured
# healthcare data analysis (e.g. datathons, courses, etc).
# Please see README.md for usage.

overall:
  # Uncomment and update the following line if you have an organization ID.
  # To find your organization ID, run `gcloud organizations list`.
  # organization_id: <your organization id>
  billing_account: ${BILLING_ACCOUNT}


# Audit logs project
audit_logs_project:
  project_id: ${PROJECT_PREFIX}-auditing
  owners_group: ${OWNERS_GROUP}
  auditors_group: ${AUDITORS_GROUP}
  audit_logs:
    logs_bigquery_dataset:
      location: ${BIGQUERY_LOCATION}
      name: audit_logs

# Configuration for other necessary projects, all of which stream the auditing
# logs to the audit project.
projects:
  # Data hosting project
  - project_id: ${PROJECT_PREFIX}-data
    owners_group: ${OWNERS_GROUP}
    auditors_group: ${AUDITORS_GROUP}
    data_readonly_groups:
    - ${DATA_READERS_GROUP}
    # These audit logs will be saved to the audit_logs_project.
    audit_logs:
      logs_gcs_bucket:
        name: ${PROJECT_PREFIX}-data-audit-logs-gcs
        location: ${GCS_LOCATION}
        storage_class: MULTI_REGIONAL
        ttl_days: 365
      logs_bigquery_dataset:
        name: data_audit_logs
        location: ${BIGQUERY_LOCATION}
  # Team working project
  - project_id: ${PROJECT_PREFIX}-team
    owners_group: ${OWNERS_GROUP}
    auditors_group: ${AUDITORS_GROUP}
    additional_project_permissions:
    - roles:  # Set all required roles for team users.
      - roles/viewer
      - roles/bigquery.user
      - roles/storage.objectCreator
      - roles/storage.objectViewer
      - roles/ml.developer
      members:
      - group:${PROJECT_USERS_GROUP}
    data_buckets:
    - name_suffix: -shared-files
      location: ${GCS_LOCATION}
      storage_class: MULTI_REGIONAL
    gce_instances:
    - name: work-machine-1
      zone: ${GCE_ZONE}
      machine_type: n1-standard-1
      start_vm: False  # If True, VM will be created and left running.
      existing_boot_image: projects/debian-cloud/global/images/family/debian-9
      startup_script: |
        #!/bin/bash
        apt-get update
        apt-get -y install build-essentials
        apt-get -y install libssl-dev libcurl4-openssl-dev
        apt-get -y install r-base gdebi-core

        # Add default accounts.
        /usr/sbin/useradd -m -d /home/analyst1 -s /bin/bash analyst1
        /usr/sbin/useradd -m -d /home/analyst2 -s /bin/bash analyst2
        /usr/sbin/useradd -m -d /home/analyst3 -s /bin/bash analyst3
        /usr/sbin/useradd -m -d /home/analyst4 -s /bin/bash analyst4
        /usr/sbin/useradd -m -d /home/analyst5 -s /bin/bash analyst5
        echo -e "analyst1\nanalyst1" | passwd analyst1
        echo -e "analyst2\nanalyst2" | passwd analyst2
        echo -e "analyst3\nanalyst3" | passwd analyst3
        echo -e "analyst4\nanalyst4" | passwd analyst4
        echo -e "analyst5\nanalyst5" | passwd analyst5

        # Add R packages.
        Rscript -e "install.packages(\"devtools\", repos=\"https://cran.rstudio.com\")"
        Rscript -e "install.packages(\"curl\", repos=\"https://cran.rstudio.com\")"
        Rscript -e "install.packages(\"git2r\", repos=\"https://cran.rstudio.com\")"
        Rscript -e "install.packages(\"bigrquery\", repos=\"https://cran.rstudio.com\")"
        Rscript -e "install.packages(\"readr\", repos=\"https://cran.rstudio.com\")"
        # Download and setup R Studio.
        wget -O /tmp/rstudio-server.deb https://download2.rstudio.org/rstudio-server-stretch-1.1.456-amd64.deb
        gdebi -n /tmp/rstudio-server.deb

    # Open port 8787 as required by RStudio server.
    gce_firewall_rules:
    - name: allow-rstudio
      allowed:
      - IPProtocol: tcp
        ports: ['8787']
      sourceRanges: [0.0.0.0/0]
    enabled_apis:
    - bigquery-json.googleapis.com  # BigQuery
    - compute.googleapis.com        # Google Compute Engine
    - ml.googleapis.com             # Cloud Machine Learning Engine
    audit_logs:
      logs_gcs_bucket:
        name: ${PROJECT_PREFIX}-team-project-audit-logs-gcs
        location: ${GCS_LOCATION}
        storage_class: MULTI_REGIONAL
        ttl_days: 365
      logs_bigquery_dataset:
        # Naming convention: PROJECT_ID, with underscores instead of dashes.
        name: team_project_audit_logs
        location: ${BIGQUERY_LOCATION}
